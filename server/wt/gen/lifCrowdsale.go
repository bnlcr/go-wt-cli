// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package gen

import (
	"math/big"
	"strings"

	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
)

// LifCrowdsaleABI is the input ABI used to generate the binding from.
const LifCrowdsaleABI = "[{\"constant\":true,\"inputs\":[],\"name\":\"foundersWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensSold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MVM\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MVM24PeriodsCapUSD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_weiPerUSD\",\"type\":\"uint256\"}],\"name\":\"setWeiPerUSDinTGE\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"foundationWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxFoundationCapUSD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"purchases\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalPresaleWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isFinalized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"beneficiary\",\"type\":\"address\"},{\"name\":\"weiSent\",\"type\":\"uint256\"},{\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"addPrivatePresaleTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimEth\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"foundersVestedPayment\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weiPerUSDinTGE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"setWeiLockSeconds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minCapUSD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"end1Timestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"funded\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"end2Timestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"foundationVestedPayment\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_startTimestamp\",\"type\":\"uint256\"},{\"name\":\"_end1Timestamp\",\"type\":\"uint256\"},{\"name\":\"_end2Timestamp\",\"type\":\"uint256\"},{\"name\":\"_rate1\",\"type\":\"uint256\"},{\"name\":\"_rate2\",\"type\":\"uint256\"},{\"name\":\"_setWeiLockSeconds\",\"type\":\"uint256\"},{\"name\":\"_foundationWallet\",\"type\":\"address\"},{\"name\":\"_foundersWallet\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Finalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"weiAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"TokenPresalePurchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenPurchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"}]"

// LifCrowdsaleBin is the compiled bytecode used for deploying new contracts.
const LifCrowdsaleBin = ``

// DeployLifCrowdsale deploys a new Ethereum contract, binding an instance of LifCrowdsale to it.
func DeployLifCrowdsale(auth *bind.TransactOpts, backend bind.ContractBackend, _startTimestamp *big.Int, _end1Timestamp *big.Int, _end2Timestamp *big.Int, _rate1 *big.Int, _rate2 *big.Int, _setWeiLockSeconds *big.Int, _foundationWallet common.Address, _foundersWallet common.Address) (common.Address, *types.Transaction, *LifCrowdsale, error) {
	parsed, err := abi.JSON(strings.NewReader(LifCrowdsaleABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(LifCrowdsaleBin), backend, _startTimestamp, _end1Timestamp, _end2Timestamp, _rate1, _rate2, _setWeiLockSeconds, _foundationWallet, _foundersWallet)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &LifCrowdsale{LifCrowdsaleCaller: LifCrowdsaleCaller{contract: contract}, LifCrowdsaleTransactor: LifCrowdsaleTransactor{contract: contract}}, nil
}

// LifCrowdsale is an auto generated Go binding around an Ethereum contract.
type LifCrowdsale struct {
	LifCrowdsaleCaller     // Read-only binding to the contract
	LifCrowdsaleTransactor // Write-only binding to the contract
}

// LifCrowdsaleCaller is an auto generated read-only Go binding around an Ethereum contract.
type LifCrowdsaleCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// LifCrowdsaleTransactor is an auto generated write-only Go binding around an Ethereum contract.
type LifCrowdsaleTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// LifCrowdsaleSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type LifCrowdsaleSession struct {
	Contract     *LifCrowdsale     // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// LifCrowdsaleCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type LifCrowdsaleCallerSession struct {
	Contract *LifCrowdsaleCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts       // Call options to use throughout this session
}

// LifCrowdsaleTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type LifCrowdsaleTransactorSession struct {
	Contract     *LifCrowdsaleTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts       // Transaction auth options to use throughout this session
}

// LifCrowdsaleRaw is an auto generated low-level Go binding around an Ethereum contract.
type LifCrowdsaleRaw struct {
	Contract *LifCrowdsale // Generic contract binding to access the raw methods on
}

// LifCrowdsaleCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type LifCrowdsaleCallerRaw struct {
	Contract *LifCrowdsaleCaller // Generic read-only contract binding to access the raw methods on
}

// LifCrowdsaleTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type LifCrowdsaleTransactorRaw struct {
	Contract *LifCrowdsaleTransactor // Generic write-only contract binding to access the raw methods on
}

// NewLifCrowdsale creates a new instance of LifCrowdsale, bound to a specific deployed contract.
func NewLifCrowdsale(address common.Address, backend bind.ContractBackend) (*LifCrowdsale, error) {
	contract, err := bindLifCrowdsale(address, backend, backend)
	if err != nil {
		return nil, err
	}
	return &LifCrowdsale{LifCrowdsaleCaller: LifCrowdsaleCaller{contract: contract}, LifCrowdsaleTransactor: LifCrowdsaleTransactor{contract: contract}}, nil
}

// NewLifCrowdsaleCaller creates a new read-only instance of LifCrowdsale, bound to a specific deployed contract.
func NewLifCrowdsaleCaller(address common.Address, caller bind.ContractCaller) (*LifCrowdsaleCaller, error) {
	contract, err := bindLifCrowdsale(address, caller, nil)
	if err != nil {
		return nil, err
	}
	return &LifCrowdsaleCaller{contract: contract}, nil
}

// NewLifCrowdsaleTransactor creates a new write-only instance of LifCrowdsale, bound to a specific deployed contract.
func NewLifCrowdsaleTransactor(address common.Address, transactor bind.ContractTransactor) (*LifCrowdsaleTransactor, error) {
	contract, err := bindLifCrowdsale(address, nil, transactor)
	if err != nil {
		return nil, err
	}
	return &LifCrowdsaleTransactor{contract: contract}, nil
}

// bindLifCrowdsale binds a generic wrapper to an already deployed contract.
func bindLifCrowdsale(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(LifCrowdsaleABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_LifCrowdsale *LifCrowdsaleRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _LifCrowdsale.Contract.LifCrowdsaleCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_LifCrowdsale *LifCrowdsaleRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _LifCrowdsale.Contract.LifCrowdsaleTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_LifCrowdsale *LifCrowdsaleRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _LifCrowdsale.Contract.LifCrowdsaleTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_LifCrowdsale *LifCrowdsaleCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _LifCrowdsale.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_LifCrowdsale *LifCrowdsaleTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _LifCrowdsale.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_LifCrowdsale *LifCrowdsaleTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _LifCrowdsale.Contract.contract.Transact(opts, method, params...)
}

// MVM is a free data retrieval call binding the contract method 0x5a388a43.
//
// Solidity: function MVM() constant returns(address)
func (_LifCrowdsale *LifCrowdsaleCaller) MVM(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _LifCrowdsale.contract.Call(opts, out, "MVM")
	return *ret0, err
}

// MVM is a free data retrieval call binding the contract method 0x5a388a43.
//
// Solidity: function MVM() constant returns(address)
func (_LifCrowdsale *LifCrowdsaleSession) MVM() (common.Address, error) {
	return _LifCrowdsale.Contract.MVM(&_LifCrowdsale.CallOpts)
}

// MVM is a free data retrieval call binding the contract method 0x5a388a43.
//
// Solidity: function MVM() constant returns(address)
func (_LifCrowdsale *LifCrowdsaleCallerSession) MVM() (common.Address, error) {
	return _LifCrowdsale.Contract.MVM(&_LifCrowdsale.CallOpts)
}

// MVM24PeriodsCapUSD is a free data retrieval call binding the contract method 0x5d91e27b.
//
// Solidity: function MVM24PeriodsCapUSD() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleCaller) MVM24PeriodsCapUSD(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _LifCrowdsale.contract.Call(opts, out, "MVM24PeriodsCapUSD")
	return *ret0, err
}

// MVM24PeriodsCapUSD is a free data retrieval call binding the contract method 0x5d91e27b.
//
// Solidity: function MVM24PeriodsCapUSD() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleSession) MVM24PeriodsCapUSD() (*big.Int, error) {
	return _LifCrowdsale.Contract.MVM24PeriodsCapUSD(&_LifCrowdsale.CallOpts)
}

// MVM24PeriodsCapUSD is a free data retrieval call binding the contract method 0x5d91e27b.
//
// Solidity: function MVM24PeriodsCapUSD() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleCallerSession) MVM24PeriodsCapUSD() (*big.Int, error) {
	return _LifCrowdsale.Contract.MVM24PeriodsCapUSD(&_LifCrowdsale.CallOpts)
}

// End1Timestamp is a free data retrieval call binding the contract method 0xe29f610d.
//
// Solidity: function end1Timestamp() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleCaller) End1Timestamp(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _LifCrowdsale.contract.Call(opts, out, "end1Timestamp")
	return *ret0, err
}

// End1Timestamp is a free data retrieval call binding the contract method 0xe29f610d.
//
// Solidity: function end1Timestamp() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleSession) End1Timestamp() (*big.Int, error) {
	return _LifCrowdsale.Contract.End1Timestamp(&_LifCrowdsale.CallOpts)
}

// End1Timestamp is a free data retrieval call binding the contract method 0xe29f610d.
//
// Solidity: function end1Timestamp() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleCallerSession) End1Timestamp() (*big.Int, error) {
	return _LifCrowdsale.Contract.End1Timestamp(&_LifCrowdsale.CallOpts)
}

// End2Timestamp is a free data retrieval call binding the contract method 0xf4fab748.
//
// Solidity: function end2Timestamp() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleCaller) End2Timestamp(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _LifCrowdsale.contract.Call(opts, out, "end2Timestamp")
	return *ret0, err
}

// End2Timestamp is a free data retrieval call binding the contract method 0xf4fab748.
//
// Solidity: function end2Timestamp() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleSession) End2Timestamp() (*big.Int, error) {
	return _LifCrowdsale.Contract.End2Timestamp(&_LifCrowdsale.CallOpts)
}

// End2Timestamp is a free data retrieval call binding the contract method 0xf4fab748.
//
// Solidity: function end2Timestamp() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleCallerSession) End2Timestamp() (*big.Int, error) {
	return _LifCrowdsale.Contract.End2Timestamp(&_LifCrowdsale.CallOpts)
}

// FoundationVestedPayment is a free data retrieval call binding the contract method 0xf5d05f7e.
//
// Solidity: function foundationVestedPayment() constant returns(address)
func (_LifCrowdsale *LifCrowdsaleCaller) FoundationVestedPayment(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _LifCrowdsale.contract.Call(opts, out, "foundationVestedPayment")
	return *ret0, err
}

// FoundationVestedPayment is a free data retrieval call binding the contract method 0xf5d05f7e.
//
// Solidity: function foundationVestedPayment() constant returns(address)
func (_LifCrowdsale *LifCrowdsaleSession) FoundationVestedPayment() (common.Address, error) {
	return _LifCrowdsale.Contract.FoundationVestedPayment(&_LifCrowdsale.CallOpts)
}

// FoundationVestedPayment is a free data retrieval call binding the contract method 0xf5d05f7e.
//
// Solidity: function foundationVestedPayment() constant returns(address)
func (_LifCrowdsale *LifCrowdsaleCallerSession) FoundationVestedPayment() (common.Address, error) {
	return _LifCrowdsale.Contract.FoundationVestedPayment(&_LifCrowdsale.CallOpts)
}

// FoundationWallet is a free data retrieval call binding the contract method 0x6b7ae8dc.
//
// Solidity: function foundationWallet() constant returns(address)
func (_LifCrowdsale *LifCrowdsaleCaller) FoundationWallet(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _LifCrowdsale.contract.Call(opts, out, "foundationWallet")
	return *ret0, err
}

// FoundationWallet is a free data retrieval call binding the contract method 0x6b7ae8dc.
//
// Solidity: function foundationWallet() constant returns(address)
func (_LifCrowdsale *LifCrowdsaleSession) FoundationWallet() (common.Address, error) {
	return _LifCrowdsale.Contract.FoundationWallet(&_LifCrowdsale.CallOpts)
}

// FoundationWallet is a free data retrieval call binding the contract method 0x6b7ae8dc.
//
// Solidity: function foundationWallet() constant returns(address)
func (_LifCrowdsale *LifCrowdsaleCallerSession) FoundationWallet() (common.Address, error) {
	return _LifCrowdsale.Contract.FoundationWallet(&_LifCrowdsale.CallOpts)
}

// FoundersVestedPayment is a free data retrieval call binding the contract method 0xbbb0c054.
//
// Solidity: function foundersVestedPayment() constant returns(address)
func (_LifCrowdsale *LifCrowdsaleCaller) FoundersVestedPayment(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _LifCrowdsale.contract.Call(opts, out, "foundersVestedPayment")
	return *ret0, err
}

// FoundersVestedPayment is a free data retrieval call binding the contract method 0xbbb0c054.
//
// Solidity: function foundersVestedPayment() constant returns(address)
func (_LifCrowdsale *LifCrowdsaleSession) FoundersVestedPayment() (common.Address, error) {
	return _LifCrowdsale.Contract.FoundersVestedPayment(&_LifCrowdsale.CallOpts)
}

// FoundersVestedPayment is a free data retrieval call binding the contract method 0xbbb0c054.
//
// Solidity: function foundersVestedPayment() constant returns(address)
func (_LifCrowdsale *LifCrowdsaleCallerSession) FoundersVestedPayment() (common.Address, error) {
	return _LifCrowdsale.Contract.FoundersVestedPayment(&_LifCrowdsale.CallOpts)
}

// FoundersWallet is a free data retrieval call binding the contract method 0x1bfaf155.
//
// Solidity: function foundersWallet() constant returns(address)
func (_LifCrowdsale *LifCrowdsaleCaller) FoundersWallet(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _LifCrowdsale.contract.Call(opts, out, "foundersWallet")
	return *ret0, err
}

// FoundersWallet is a free data retrieval call binding the contract method 0x1bfaf155.
//
// Solidity: function foundersWallet() constant returns(address)
func (_LifCrowdsale *LifCrowdsaleSession) FoundersWallet() (common.Address, error) {
	return _LifCrowdsale.Contract.FoundersWallet(&_LifCrowdsale.CallOpts)
}

// FoundersWallet is a free data retrieval call binding the contract method 0x1bfaf155.
//
// Solidity: function foundersWallet() constant returns(address)
func (_LifCrowdsale *LifCrowdsaleCallerSession) FoundersWallet() (common.Address, error) {
	return _LifCrowdsale.Contract.FoundersWallet(&_LifCrowdsale.CallOpts)
}

// Funded is a free data retrieval call binding the contract method 0xf3a504f2.
//
// Solidity: function funded() constant returns(bool)
func (_LifCrowdsale *LifCrowdsaleCaller) Funded(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _LifCrowdsale.contract.Call(opts, out, "funded")
	return *ret0, err
}

// Funded is a free data retrieval call binding the contract method 0xf3a504f2.
//
// Solidity: function funded() constant returns(bool)
func (_LifCrowdsale *LifCrowdsaleSession) Funded() (bool, error) {
	return _LifCrowdsale.Contract.Funded(&_LifCrowdsale.CallOpts)
}

// Funded is a free data retrieval call binding the contract method 0xf3a504f2.
//
// Solidity: function funded() constant returns(bool)
func (_LifCrowdsale *LifCrowdsaleCallerSession) Funded() (bool, error) {
	return _LifCrowdsale.Contract.Funded(&_LifCrowdsale.CallOpts)
}

// GetRate is a free data retrieval call binding the contract method 0x679aefce.
//
// Solidity: function getRate() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleCaller) GetRate(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _LifCrowdsale.contract.Call(opts, out, "getRate")
	return *ret0, err
}

// GetRate is a free data retrieval call binding the contract method 0x679aefce.
//
// Solidity: function getRate() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleSession) GetRate() (*big.Int, error) {
	return _LifCrowdsale.Contract.GetRate(&_LifCrowdsale.CallOpts)
}

// GetRate is a free data retrieval call binding the contract method 0x679aefce.
//
// Solidity: function getRate() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleCallerSession) GetRate() (*big.Int, error) {
	return _LifCrowdsale.Contract.GetRate(&_LifCrowdsale.CallOpts)
}

// IsFinalized is a free data retrieval call binding the contract method 0x8d4e4083.
//
// Solidity: function isFinalized() constant returns(bool)
func (_LifCrowdsale *LifCrowdsaleCaller) IsFinalized(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _LifCrowdsale.contract.Call(opts, out, "isFinalized")
	return *ret0, err
}

// IsFinalized is a free data retrieval call binding the contract method 0x8d4e4083.
//
// Solidity: function isFinalized() constant returns(bool)
func (_LifCrowdsale *LifCrowdsaleSession) IsFinalized() (bool, error) {
	return _LifCrowdsale.Contract.IsFinalized(&_LifCrowdsale.CallOpts)
}

// IsFinalized is a free data retrieval call binding the contract method 0x8d4e4083.
//
// Solidity: function isFinalized() constant returns(bool)
func (_LifCrowdsale *LifCrowdsaleCallerSession) IsFinalized() (bool, error) {
	return _LifCrowdsale.Contract.IsFinalized(&_LifCrowdsale.CallOpts)
}

// MaxFoundationCapUSD is a free data retrieval call binding the contract method 0x816f3438.
//
// Solidity: function maxFoundationCapUSD() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleCaller) MaxFoundationCapUSD(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _LifCrowdsale.contract.Call(opts, out, "maxFoundationCapUSD")
	return *ret0, err
}

// MaxFoundationCapUSD is a free data retrieval call binding the contract method 0x816f3438.
//
// Solidity: function maxFoundationCapUSD() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleSession) MaxFoundationCapUSD() (*big.Int, error) {
	return _LifCrowdsale.Contract.MaxFoundationCapUSD(&_LifCrowdsale.CallOpts)
}

// MaxFoundationCapUSD is a free data retrieval call binding the contract method 0x816f3438.
//
// Solidity: function maxFoundationCapUSD() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleCallerSession) MaxFoundationCapUSD() (*big.Int, error) {
	return _LifCrowdsale.Contract.MaxFoundationCapUSD(&_LifCrowdsale.CallOpts)
}

// MinCapUSD is a free data retrieval call binding the contract method 0xded317a8.
//
// Solidity: function minCapUSD() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleCaller) MinCapUSD(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _LifCrowdsale.contract.Call(opts, out, "minCapUSD")
	return *ret0, err
}

// MinCapUSD is a free data retrieval call binding the contract method 0xded317a8.
//
// Solidity: function minCapUSD() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleSession) MinCapUSD() (*big.Int, error) {
	return _LifCrowdsale.Contract.MinCapUSD(&_LifCrowdsale.CallOpts)
}

// MinCapUSD is a free data retrieval call binding the contract method 0xded317a8.
//
// Solidity: function minCapUSD() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleCallerSession) MinCapUSD() (*big.Int, error) {
	return _LifCrowdsale.Contract.MinCapUSD(&_LifCrowdsale.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_LifCrowdsale *LifCrowdsaleCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _LifCrowdsale.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_LifCrowdsale *LifCrowdsaleSession) Owner() (common.Address, error) {
	return _LifCrowdsale.Contract.Owner(&_LifCrowdsale.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_LifCrowdsale *LifCrowdsaleCallerSession) Owner() (common.Address, error) {
	return _LifCrowdsale.Contract.Owner(&_LifCrowdsale.CallOpts)
}

// Paused is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() constant returns(bool)
func (_LifCrowdsale *LifCrowdsaleCaller) Paused(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _LifCrowdsale.contract.Call(opts, out, "paused")
	return *ret0, err
}

// Paused is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() constant returns(bool)
func (_LifCrowdsale *LifCrowdsaleSession) Paused() (bool, error) {
	return _LifCrowdsale.Contract.Paused(&_LifCrowdsale.CallOpts)
}

// Paused is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() constant returns(bool)
func (_LifCrowdsale *LifCrowdsaleCallerSession) Paused() (bool, error) {
	return _LifCrowdsale.Contract.Paused(&_LifCrowdsale.CallOpts)
}

// Purchases is a free data retrieval call binding the contract method 0x842a77d3.
//
// Solidity: function purchases( address) constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleCaller) Purchases(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _LifCrowdsale.contract.Call(opts, out, "purchases", arg0)
	return *ret0, err
}

// Purchases is a free data retrieval call binding the contract method 0x842a77d3.
//
// Solidity: function purchases( address) constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleSession) Purchases(arg0 common.Address) (*big.Int, error) {
	return _LifCrowdsale.Contract.Purchases(&_LifCrowdsale.CallOpts, arg0)
}

// Purchases is a free data retrieval call binding the contract method 0x842a77d3.
//
// Solidity: function purchases( address) constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleCallerSession) Purchases(arg0 common.Address) (*big.Int, error) {
	return _LifCrowdsale.Contract.Purchases(&_LifCrowdsale.CallOpts, arg0)
}

// Rate1 is a free data retrieval call binding the contract method 0xcf854969.
//
// Solidity: function rate1() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleCaller) Rate1(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _LifCrowdsale.contract.Call(opts, out, "rate1")
	return *ret0, err
}

// Rate1 is a free data retrieval call binding the contract method 0xcf854969.
//
// Solidity: function rate1() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleSession) Rate1() (*big.Int, error) {
	return _LifCrowdsale.Contract.Rate1(&_LifCrowdsale.CallOpts)
}

// Rate1 is a free data retrieval call binding the contract method 0xcf854969.
//
// Solidity: function rate1() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleCallerSession) Rate1() (*big.Int, error) {
	return _LifCrowdsale.Contract.Rate1(&_LifCrowdsale.CallOpts)
}

// Rate2 is a free data retrieval call binding the contract method 0xf555b815.
//
// Solidity: function rate2() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleCaller) Rate2(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _LifCrowdsale.contract.Call(opts, out, "rate2")
	return *ret0, err
}

// Rate2 is a free data retrieval call binding the contract method 0xf555b815.
//
// Solidity: function rate2() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleSession) Rate2() (*big.Int, error) {
	return _LifCrowdsale.Contract.Rate2(&_LifCrowdsale.CallOpts)
}

// Rate2 is a free data retrieval call binding the contract method 0xf555b815.
//
// Solidity: function rate2() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleCallerSession) Rate2() (*big.Int, error) {
	return _LifCrowdsale.Contract.Rate2(&_LifCrowdsale.CallOpts)
}

// SetWeiLockSeconds is a free data retrieval call binding the contract method 0xd12a6049.
//
// Solidity: function setWeiLockSeconds() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleCaller) SetWeiLockSeconds(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _LifCrowdsale.contract.Call(opts, out, "setWeiLockSeconds")
	return *ret0, err
}

// SetWeiLockSeconds is a free data retrieval call binding the contract method 0xd12a6049.
//
// Solidity: function setWeiLockSeconds() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleSession) SetWeiLockSeconds() (*big.Int, error) {
	return _LifCrowdsale.Contract.SetWeiLockSeconds(&_LifCrowdsale.CallOpts)
}

// SetWeiLockSeconds is a free data retrieval call binding the contract method 0xd12a6049.
//
// Solidity: function setWeiLockSeconds() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleCallerSession) SetWeiLockSeconds() (*big.Int, error) {
	return _LifCrowdsale.Contract.SetWeiLockSeconds(&_LifCrowdsale.CallOpts)
}

// StartTimestamp is a free data retrieval call binding the contract method 0xe6fd48bc.
//
// Solidity: function startTimestamp() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleCaller) StartTimestamp(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _LifCrowdsale.contract.Call(opts, out, "startTimestamp")
	return *ret0, err
}

// StartTimestamp is a free data retrieval call binding the contract method 0xe6fd48bc.
//
// Solidity: function startTimestamp() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleSession) StartTimestamp() (*big.Int, error) {
	return _LifCrowdsale.Contract.StartTimestamp(&_LifCrowdsale.CallOpts)
}

// StartTimestamp is a free data retrieval call binding the contract method 0xe6fd48bc.
//
// Solidity: function startTimestamp() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleCallerSession) StartTimestamp() (*big.Int, error) {
	return _LifCrowdsale.Contract.StartTimestamp(&_LifCrowdsale.CallOpts)
}

// Token is a free data retrieval call binding the contract method 0xfc0c546a.
//
// Solidity: function token() constant returns(address)
func (_LifCrowdsale *LifCrowdsaleCaller) Token(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _LifCrowdsale.contract.Call(opts, out, "token")
	return *ret0, err
}

// Token is a free data retrieval call binding the contract method 0xfc0c546a.
//
// Solidity: function token() constant returns(address)
func (_LifCrowdsale *LifCrowdsaleSession) Token() (common.Address, error) {
	return _LifCrowdsale.Contract.Token(&_LifCrowdsale.CallOpts)
}

// Token is a free data retrieval call binding the contract method 0xfc0c546a.
//
// Solidity: function token() constant returns(address)
func (_LifCrowdsale *LifCrowdsaleCallerSession) Token() (common.Address, error) {
	return _LifCrowdsale.Contract.Token(&_LifCrowdsale.CallOpts)
}

// TokensSold is a free data retrieval call binding the contract method 0x518ab2a8.
//
// Solidity: function tokensSold() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleCaller) TokensSold(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _LifCrowdsale.contract.Call(opts, out, "tokensSold")
	return *ret0, err
}

// TokensSold is a free data retrieval call binding the contract method 0x518ab2a8.
//
// Solidity: function tokensSold() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleSession) TokensSold() (*big.Int, error) {
	return _LifCrowdsale.Contract.TokensSold(&_LifCrowdsale.CallOpts)
}

// TokensSold is a free data retrieval call binding the contract method 0x518ab2a8.
//
// Solidity: function tokensSold() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleCallerSession) TokensSold() (*big.Int, error) {
	return _LifCrowdsale.Contract.TokensSold(&_LifCrowdsale.CallOpts)
}

// TotalPresaleWei is a free data retrieval call binding the contract method 0x8a9b35a7.
//
// Solidity: function totalPresaleWei() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleCaller) TotalPresaleWei(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _LifCrowdsale.contract.Call(opts, out, "totalPresaleWei")
	return *ret0, err
}

// TotalPresaleWei is a free data retrieval call binding the contract method 0x8a9b35a7.
//
// Solidity: function totalPresaleWei() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleSession) TotalPresaleWei() (*big.Int, error) {
	return _LifCrowdsale.Contract.TotalPresaleWei(&_LifCrowdsale.CallOpts)
}

// TotalPresaleWei is a free data retrieval call binding the contract method 0x8a9b35a7.
//
// Solidity: function totalPresaleWei() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleCallerSession) TotalPresaleWei() (*big.Int, error) {
	return _LifCrowdsale.Contract.TotalPresaleWei(&_LifCrowdsale.CallOpts)
}

// WeiPerUSDinTGE is a free data retrieval call binding the contract method 0xca256771.
//
// Solidity: function weiPerUSDinTGE() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleCaller) WeiPerUSDinTGE(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _LifCrowdsale.contract.Call(opts, out, "weiPerUSDinTGE")
	return *ret0, err
}

// WeiPerUSDinTGE is a free data retrieval call binding the contract method 0xca256771.
//
// Solidity: function weiPerUSDinTGE() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleSession) WeiPerUSDinTGE() (*big.Int, error) {
	return _LifCrowdsale.Contract.WeiPerUSDinTGE(&_LifCrowdsale.CallOpts)
}

// WeiPerUSDinTGE is a free data retrieval call binding the contract method 0xca256771.
//
// Solidity: function weiPerUSDinTGE() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleCallerSession) WeiPerUSDinTGE() (*big.Int, error) {
	return _LifCrowdsale.Contract.WeiPerUSDinTGE(&_LifCrowdsale.CallOpts)
}

// WeiRaised is a free data retrieval call binding the contract method 0x4042b66f.
//
// Solidity: function weiRaised() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleCaller) WeiRaised(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _LifCrowdsale.contract.Call(opts, out, "weiRaised")
	return *ret0, err
}

// WeiRaised is a free data retrieval call binding the contract method 0x4042b66f.
//
// Solidity: function weiRaised() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleSession) WeiRaised() (*big.Int, error) {
	return _LifCrowdsale.Contract.WeiRaised(&_LifCrowdsale.CallOpts)
}

// WeiRaised is a free data retrieval call binding the contract method 0x4042b66f.
//
// Solidity: function weiRaised() constant returns(uint256)
func (_LifCrowdsale *LifCrowdsaleCallerSession) WeiRaised() (*big.Int, error) {
	return _LifCrowdsale.Contract.WeiRaised(&_LifCrowdsale.CallOpts)
}

// AddPrivatePresaleTokens is a paid mutator transaction binding the contract method 0xa5878c65.
//
// Solidity: function addPrivatePresaleTokens(beneficiary address, weiSent uint256, rate uint256) returns()
func (_LifCrowdsale *LifCrowdsaleTransactor) AddPrivatePresaleTokens(opts *bind.TransactOpts, beneficiary common.Address, weiSent *big.Int, rate *big.Int) (*types.Transaction, error) {
	return _LifCrowdsale.contract.Transact(opts, "addPrivatePresaleTokens", beneficiary, weiSent, rate)
}

// AddPrivatePresaleTokens is a paid mutator transaction binding the contract method 0xa5878c65.
//
// Solidity: function addPrivatePresaleTokens(beneficiary address, weiSent uint256, rate uint256) returns()
func (_LifCrowdsale *LifCrowdsaleSession) AddPrivatePresaleTokens(beneficiary common.Address, weiSent *big.Int, rate *big.Int) (*types.Transaction, error) {
	return _LifCrowdsale.Contract.AddPrivatePresaleTokens(&_LifCrowdsale.TransactOpts, beneficiary, weiSent, rate)
}

// AddPrivatePresaleTokens is a paid mutator transaction binding the contract method 0xa5878c65.
//
// Solidity: function addPrivatePresaleTokens(beneficiary address, weiSent uint256, rate uint256) returns()
func (_LifCrowdsale *LifCrowdsaleTransactorSession) AddPrivatePresaleTokens(beneficiary common.Address, weiSent *big.Int, rate *big.Int) (*types.Transaction, error) {
	return _LifCrowdsale.Contract.AddPrivatePresaleTokens(&_LifCrowdsale.TransactOpts, beneficiary, weiSent, rate)
}

// BuyTokens is a paid mutator transaction binding the contract method 0xec8ac4d8.
//
// Solidity: function buyTokens(beneficiary address) returns()
func (_LifCrowdsale *LifCrowdsaleTransactor) BuyTokens(opts *bind.TransactOpts, beneficiary common.Address) (*types.Transaction, error) {
	return _LifCrowdsale.contract.Transact(opts, "buyTokens", beneficiary)
}

// BuyTokens is a paid mutator transaction binding the contract method 0xec8ac4d8.
//
// Solidity: function buyTokens(beneficiary address) returns()
func (_LifCrowdsale *LifCrowdsaleSession) BuyTokens(beneficiary common.Address) (*types.Transaction, error) {
	return _LifCrowdsale.Contract.BuyTokens(&_LifCrowdsale.TransactOpts, beneficiary)
}

// BuyTokens is a paid mutator transaction binding the contract method 0xec8ac4d8.
//
// Solidity: function buyTokens(beneficiary address) returns()
func (_LifCrowdsale *LifCrowdsaleTransactorSession) BuyTokens(beneficiary common.Address) (*types.Transaction, error) {
	return _LifCrowdsale.Contract.BuyTokens(&_LifCrowdsale.TransactOpts, beneficiary)
}

// ClaimEth is a paid mutator transaction binding the contract method 0xb7cdddcb.
//
// Solidity: function claimEth() returns()
func (_LifCrowdsale *LifCrowdsaleTransactor) ClaimEth(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _LifCrowdsale.contract.Transact(opts, "claimEth")
}

// ClaimEth is a paid mutator transaction binding the contract method 0xb7cdddcb.
//
// Solidity: function claimEth() returns()
func (_LifCrowdsale *LifCrowdsaleSession) ClaimEth() (*types.Transaction, error) {
	return _LifCrowdsale.Contract.ClaimEth(&_LifCrowdsale.TransactOpts)
}

// ClaimEth is a paid mutator transaction binding the contract method 0xb7cdddcb.
//
// Solidity: function claimEth() returns()
func (_LifCrowdsale *LifCrowdsaleTransactorSession) ClaimEth() (*types.Transaction, error) {
	return _LifCrowdsale.Contract.ClaimEth(&_LifCrowdsale.TransactOpts)
}

// Finalize is a paid mutator transaction binding the contract method 0x4bb278f3.
//
// Solidity: function finalize() returns()
func (_LifCrowdsale *LifCrowdsaleTransactor) Finalize(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _LifCrowdsale.contract.Transact(opts, "finalize")
}

// Finalize is a paid mutator transaction binding the contract method 0x4bb278f3.
//
// Solidity: function finalize() returns()
func (_LifCrowdsale *LifCrowdsaleSession) Finalize() (*types.Transaction, error) {
	return _LifCrowdsale.Contract.Finalize(&_LifCrowdsale.TransactOpts)
}

// Finalize is a paid mutator transaction binding the contract method 0x4bb278f3.
//
// Solidity: function finalize() returns()
func (_LifCrowdsale *LifCrowdsaleTransactorSession) Finalize() (*types.Transaction, error) {
	return _LifCrowdsale.Contract.Finalize(&_LifCrowdsale.TransactOpts)
}

// Pause is a paid mutator transaction binding the contract method 0x8456cb59.
//
// Solidity: function pause() returns(bool)
func (_LifCrowdsale *LifCrowdsaleTransactor) Pause(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _LifCrowdsale.contract.Transact(opts, "pause")
}

// Pause is a paid mutator transaction binding the contract method 0x8456cb59.
//
// Solidity: function pause() returns(bool)
func (_LifCrowdsale *LifCrowdsaleSession) Pause() (*types.Transaction, error) {
	return _LifCrowdsale.Contract.Pause(&_LifCrowdsale.TransactOpts)
}

// Pause is a paid mutator transaction binding the contract method 0x8456cb59.
//
// Solidity: function pause() returns(bool)
func (_LifCrowdsale *LifCrowdsaleTransactorSession) Pause() (*types.Transaction, error) {
	return _LifCrowdsale.Contract.Pause(&_LifCrowdsale.TransactOpts)
}

// SetWeiPerUSDinTGE is a paid mutator transaction binding the contract method 0x6274ca4b.
//
// Solidity: function setWeiPerUSDinTGE(_weiPerUSD uint256) returns()
func (_LifCrowdsale *LifCrowdsaleTransactor) SetWeiPerUSDinTGE(opts *bind.TransactOpts, _weiPerUSD *big.Int) (*types.Transaction, error) {
	return _LifCrowdsale.contract.Transact(opts, "setWeiPerUSDinTGE", _weiPerUSD)
}

// SetWeiPerUSDinTGE is a paid mutator transaction binding the contract method 0x6274ca4b.
//
// Solidity: function setWeiPerUSDinTGE(_weiPerUSD uint256) returns()
func (_LifCrowdsale *LifCrowdsaleSession) SetWeiPerUSDinTGE(_weiPerUSD *big.Int) (*types.Transaction, error) {
	return _LifCrowdsale.Contract.SetWeiPerUSDinTGE(&_LifCrowdsale.TransactOpts, _weiPerUSD)
}

// SetWeiPerUSDinTGE is a paid mutator transaction binding the contract method 0x6274ca4b.
//
// Solidity: function setWeiPerUSDinTGE(_weiPerUSD uint256) returns()
func (_LifCrowdsale *LifCrowdsaleTransactorSession) SetWeiPerUSDinTGE(_weiPerUSD *big.Int) (*types.Transaction, error) {
	return _LifCrowdsale.Contract.SetWeiPerUSDinTGE(&_LifCrowdsale.TransactOpts, _weiPerUSD)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(newOwner address) returns()
func (_LifCrowdsale *LifCrowdsaleTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _LifCrowdsale.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(newOwner address) returns()
func (_LifCrowdsale *LifCrowdsaleSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _LifCrowdsale.Contract.TransferOwnership(&_LifCrowdsale.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(newOwner address) returns()
func (_LifCrowdsale *LifCrowdsaleTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _LifCrowdsale.Contract.TransferOwnership(&_LifCrowdsale.TransactOpts, newOwner)
}

// Unpause is a paid mutator transaction binding the contract method 0x3f4ba83a.
//
// Solidity: function unpause() returns(bool)
func (_LifCrowdsale *LifCrowdsaleTransactor) Unpause(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _LifCrowdsale.contract.Transact(opts, "unpause")
}

// Unpause is a paid mutator transaction binding the contract method 0x3f4ba83a.
//
// Solidity: function unpause() returns(bool)
func (_LifCrowdsale *LifCrowdsaleSession) Unpause() (*types.Transaction, error) {
	return _LifCrowdsale.Contract.Unpause(&_LifCrowdsale.TransactOpts)
}

// Unpause is a paid mutator transaction binding the contract method 0x3f4ba83a.
//
// Solidity: function unpause() returns(bool)
func (_LifCrowdsale *LifCrowdsaleTransactorSession) Unpause() (*types.Transaction, error) {
	return _LifCrowdsale.Contract.Unpause(&_LifCrowdsale.TransactOpts)
}
